// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using c14.Models;

namespace c14.Migrations
{
    [DbContext(typeof(CukierniaDbContext))]
    partial class CukierniaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("c14.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klients");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Linus",
                            Nazwisko = "Torvals"
                        });
                });

            modelBuilder.Entity("c14.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracowniks");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "Cymbał",
                            Nazwisko = "Polak"
                        });
                });

            modelBuilder.Entity("c14.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobCukierniczy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobCukierniczy");

                    b.ToTable("WyrobCukierniczys");

                    b.HasData(
                        new
                        {
                            IdWyrobCukierniczy = 1,
                            CenaZaSzt = 21.37f,
                            Nazwa = "Mniami",
                            Typ = "Mniamuwa"
                        });
                });

            modelBuilder.Entity("c14.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int?>("KlientIdKlient")
                        .HasColumnType("int");

                    b.Property<int?>("PracownikIdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("KlientIdKlient");

                    b.HasIndex("PracownikIdPracownik");

                    b.ToTable("Zamowienies");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 6, 11, 16, 53, 40, 268, DateTimeKind.Local).AddTicks(1809),
                            DataRealizacji = new DateTime(2020, 6, 11, 16, 53, 40, 284, DateTimeKind.Local).AddTicks(2279),
                            IdKlient = 1,
                            IdPracownik = 1,
                            Uwagi = "aaaaaaaaaaaaaaaa"
                        });
                });

            modelBuilder.Entity("c14.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdWyrobCukierniczy")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("WyrobCukierniczyIdWyrobCukierniczy")
                        .HasColumnType("int");

                    b.Property<int?>("ZamowienieIdZamowienia")
                        .HasColumnType("int");

                    b.HasKey("IdZamowienia");

                    b.HasIndex("WyrobCukierniczyIdWyrobCukierniczy");

                    b.HasIndex("ZamowienieIdZamowienia");

                    b.ToTable("ZamowienieWyrobCukierniczies");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            IdWyrobCukierniczy = 1,
                            Ilosc = 2137,
                            Uwagi = "mniami ma byc"
                        });
                });

            modelBuilder.Entity("c14.Models.Zamowienie", b =>
                {
                    b.HasOne("c14.Models.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("KlientIdKlient");

                    b.HasOne("c14.Models.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikIdPracownik");
                });

            modelBuilder.Entity("c14.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.HasOne("c14.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany()
                        .HasForeignKey("WyrobCukierniczyIdWyrobCukierniczy");

                    b.HasOne("c14.Models.Zamowienie", "Zamowienie")
                        .WithMany()
                        .HasForeignKey("ZamowienieIdZamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
